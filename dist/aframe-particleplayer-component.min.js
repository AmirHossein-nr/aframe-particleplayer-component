(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,exports){if(typeof AFRAME==="undefined"){throw new Error("Component attempted to register before AFRAME was available.")}AFRAME.registerComponent("particleplayer",{schema:{data:{type:"selector"},on:{type:"string"},dur:{default:1e3},delay:{default:0},count:{type:"int",default:-1},randomPick:{default:true},loop:{default:false}},init:function(){if(this.el.children.length==0){this.createDefaultGeometry()}else{this.createGeometriesFromChildren()}},createDefaultGeometry:function(){var material=new THREE.MeshPhongMaterial({color:16711680,side:THREE.DoubleSide,blending:THREE.AdditiveBlending});var geometry=new THREE.PlaneBufferGeometry(.01,.01);this.geometries=[new THREE.Mesh(geometry,material)]},createGeometriesFromChildren:function(){var children=this.el.children;this.geometries=[];for(var i=0;i<children.length;i++){children[i].addEventListener("loaded",this.childrenGeometryReady.bind(this))}},childrenGeometryReady:function(evt){console.log(">>>>>>",evt);evt.target.removeEventListener("loaded",this.childrenGeometryReady);this.geometries.push(evt.detail.model.clone());evt.target.setAttribute("visible",false)}})}]);
